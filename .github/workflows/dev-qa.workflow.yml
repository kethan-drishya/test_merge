# @format

name: Deploy on qa Env ðŸš€
on:
  push:
    branches: ["dev-qa"]

permissions:
      contents: write
      pull-requests: write
    
jobs:
  run:
    runs-on: [ubuntu-latest]
    # container: docker://dvcorg/cml-py3:latest
    env:
          repo_token: ${{ secrets.REPO_TOKEN }}
          repo_name: ${{ github.event.repository.name }}
  # dependabot:
    # runs-on: ubuntu-latest
    # if: ${{ github.actor == 'dependabot[bot]' }}
    steps:
      # - name: create repo
      #   env:
      #     PR_URL: ${{github.event.pull_request.html_url}}
      #     GITHUB_TOKEN: $repo_token
      #   run: |
      #     git config --global user.email "kethan.sarma@drishya.ai"
      #     git config --global user.name "Kethan Sarma"
      #     git clone "https://$GITHUB_ACTOR:$repo_token@github.com/kethan-drishya/$repo_name.git"
      #     cd $repo_name
      #     git remote add upstream https://github.com/kethan-drishya/$repo_name.git
      #     git init
      #     git config --local merge.ours.driver true
      
    - name: metadata
      uses: dependabot/fetch-metadata@v1.1.1
      with:
        github-token: "${{ secrets.GH_TOKEN }}"
      
    - name: create a PR       
      env:
        PR_URL: ${{github.event.pull_request.html_url}}
        GITHUB_TOKEN: ${{ secrets.REPO_TOKEN }}
        GH_PAT: ${{ secrets.REPO_TOKEN }}
      run: |
        cd $repo_name
        gh pr create --title "The bug is fixed" --body "Everything works again"
        gh pr create --base dev-qa2 --head dev-qa "$PR_URL"
        
        
# jobs:
#   run:
#     runs-on: [ubuntu-latest]
#     # container: docker://dvcorg/cml-py3:latest
#     env:
#           repo_token: ${{ secrets.REPO_TOKEN }}
#           repo_name: ${{ github.event.repository.name }}
#     steps:
#       - name: Merging dev-qa into dev-qa2       
#         run: |
#           git config --global user.email "kethan.sarma@drishya.ai"
#           git config --global user.name "Kethan Sarma"
#           git clone "https://$GITHUB_ACTOR:$repo_token@github.com/kethan-drishya/$repo_name.git"
#           cd $repo_name
#           git remote add upstream https://github.com/kethan-drishya/$repo_name.git
#           git init
#           git config --local merge.ours.driver true
#       #     git checkout dev-qa2
#       #     git fetch --all          
#       #     git merge upstream/dev-qa
#       #     git push
#       - name: Create Pull Request
#         id: cpr
#         uses: repo-sync/pull-request@v2
#         with:
#           source_branch: ""                                 # If blank, default: triggered branch
#           destination_branch: "dev-qa2"                      # If blank, default: master
#           pr_title: "Pulling ${{ github.ref }} into dev-qa2" # Title of pull request
#           pr_body: ":crown: *An automated PR*"              # Full markdown support, requires pr_title to be set
#           # pr_template: ".github/PULL_REQUEST_TEMPLATE.md"   # Path to pull request template, requires pr_title to be set, excludes pr_body
#           # pr_reviewer: "wei,worker"                         # Comma-separated list (no spaces)
#           # pr_assignee: "wei,worker"                         # Comma-separated list (no spaces)
#           # pr_label: "auto-pr"                               # Comma-separated list (no spaces)
#           # pr_milestone: "Milestone 1"                       # Milestone name
#           # pr_draft: true                                    # Creates pull request as draft
#           # pr_allow_empty: true                     
#           github_token: $repo_token
      # - name: Check outputs
      #   if: ${{ steps.cpr.outputs.pull-request-number }}
      #   run: |
      #     echo "Pull Request Number - ${{ steps.cpr.outputs.pull-request-number }}"
      #     echo "Pull Request URL - ${{ steps.cpr.outputs.pull-request-url }}
      # - name: Cleanup
      #   run: |
      #     cd ..
      #     sudo rm -r -f $repo_name



  
